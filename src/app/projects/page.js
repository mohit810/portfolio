import ProjectCard from "../[...components]/Cards/ProjectCard";

export default function Projects() {
  const institutes = [
    {
      name: "Restaurant App",
      details: {
        Platforms: ["Android", "Website"],
        Description:
          "An open-source food Ordering app, and website that can be used by any restaurant with a few tweaks",
        TechStack: [
          {
            name: "Kotlin",
            url: "https://github.com/mohit810/Restaurant-Android-App-Narendra-Sir-and-Sunil-Sir",
          },
          {
            name: "React",
            url: "https://github.com/mohit810/final-restaurant-website",
          },
          {
            name: "Golang",
            url: "https://github.com/mohit810/final-restaurant-backend",
          },
          { name: "MySQL", url: "https://github.com/mohit810/Restaurant_DB" },
        ],
        Copyright:
          "https://github.com/mohit810/final-restaurant-backend/blob/master/CopyRightCertificateApplicant.pdf",
      },
    },
    {
      name: "Streaming Service",
      details: {
        Platforms: ["Android", "Website"],
        Description:
          "I have developed server-side as well as web code that connects with users via WebRTC to receive the video and audio stream and then transcodes the stream to HLS for other users to watch. ",
        TechStack: [
          {
            name: "HTML",
            url: "https://github.com/mohit810/streamingcdn-web-ui",
          },
          {
            name: "CSS",
            url: "https://github.com/mohit810/streamingcdn-web-ui",
          },
          {
            name: "JS",
            url: "https://github.com/mohit810/streamingcdn-web-ui",
          },
          { name: "Golang", url: "https://github.com/mohit810/streamingcdn" },
        ],
      },
    },
    {
      name: "Covi-Helper website",
      details: {
        Platforms: ["Android", "Website"],
        Description:
          "I have developed the server side as well as the front-end website that can be used to fetch resources available in the districts that other users submit. I have added functionality where different users can register themselves via google sign-in as verifying volunteers to verify resources(they can verify the resources only after getting verified by admin). ",
        TechStack: [
          {
            name: "React",
            url: "https://github.com/mohit810/covi-helper-website",
          },
          {
            name: "Golang",
            url: "https://github.com/mohit810/covi-helper-backend-code",
          },
          {
            name: "MySQL",
            url: "",
          },
        ],
      },
    },
    {
      name: "Securecrypt - Securing Files Software",
      details: {
        Platforms: ["Windows"],
        Description:
          "In collaboration with my project partner and under the guidance of faculties of Manipal, we created software that encrypts files first and then decrypts the files through an OTP that is generated by the software. The Tech behind the Project: C# and .NET Framework, 256-bit  Rijndael encryption algorithm.",
        TechStack: [
          {
            name: "C#",
            url: "",
          },
          {
            name: ".NET Framework",
            url: "",
          },
        ],
        Copyright:
          "https://github.com/mohit810/securecrypt-copyright/blob/main/CopyRightCertificateApplicantCopy.pdf",
      },
    },
    {
      name: "Chatting App",
      details: {
        Platforms: ["Ios"],
        Description:
          "I have developed the server side as well as the front-end website that can be used to fetch resources available in the districts that other users submit. I have added functionality where different users can register themselves via google sign-in as verifying volunteers to verify resources(they can verify the resources only after getting verified by admin). ",
        TechStack: [
          {
            name: "Swift",
            url: "https://github.com/mohit810/ios-firestore-chat",
          },
        ],
      },
    },
  ];
  return (
    <div className="grid grid-cols-2">
      {institutes.map((institute) => (
        <ProjectCard key={institute} item={institute} />
      ))}
    </div>
  );
}
